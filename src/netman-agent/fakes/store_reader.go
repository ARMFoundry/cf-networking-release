// This file was generated by counterfeiter
package fakes

import (
	"netman-agent/models"
	"sync"
)

type StoreReader struct {
	GetContainersStub        func() map[string][]models.Container
	getContainersMutex       sync.RWMutex
	getContainersArgsForCall []struct{}
	getContainersReturns     struct {
		result1 map[string][]models.Container
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *StoreReader) GetContainers() map[string][]models.Container {
	fake.getContainersMutex.Lock()
	fake.getContainersArgsForCall = append(fake.getContainersArgsForCall, struct{}{})
	fake.recordInvocation("GetContainers", []interface{}{})
	fake.getContainersMutex.Unlock()
	if fake.GetContainersStub != nil {
		return fake.GetContainersStub()
	} else {
		return fake.getContainersReturns.result1
	}
}

func (fake *StoreReader) GetContainersCallCount() int {
	fake.getContainersMutex.RLock()
	defer fake.getContainersMutex.RUnlock()
	return len(fake.getContainersArgsForCall)
}

func (fake *StoreReader) GetContainersReturns(result1 map[string][]models.Container) {
	fake.GetContainersStub = nil
	fake.getContainersReturns = struct {
		result1 map[string][]models.Container
	}{result1}
}

func (fake *StoreReader) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getContainersMutex.RLock()
	defer fake.getContainersMutex.RUnlock()
	return fake.invocations
}

func (fake *StoreReader) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}
