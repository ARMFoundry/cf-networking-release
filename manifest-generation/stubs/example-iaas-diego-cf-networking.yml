---
cf_networking_overrides:
  releases:
  - name: cf-networking
    version: latest
  driver_templates:
  - name: garden-cni
    release: cf-networking
  - name: silk-cni
    release: cf-networking
  - name: silk-daemon
    release: cf-networking
  - name: netmon
    release: cf-networking
  - name: vxlan-policy-agent
    release: cf-networking
  bbs_templates:
  - name: silk-controller
    release: cf-networking
  bbs_consul_properties:
    agent:
      services:
        silk-controller: {}
  properties:
    cf_networking:
      cni_config_dir: /var/vcap/jobs/silk-cni/config/cni
      silk_controller:
        database:
          type: REPLACE_WITH_DB_TYPE # must be mysql or postgres
          username: REPLACE_WITH_USERNAME
          password: REPLACE_WITH_PASSWORD
          host: REPLACE_WITH_DB_HOSTNAME
          port: REPLACE_WITH_DB_PORT # e.g. 3306 for mysql
          name: REPLACE_WITH_DB_NAME # e.g. network_connectivity
        ca_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_CA_CERT
          -----END CERTIFICATE-----
        server_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_SILK_CONTROLLER_CERT
          -----END CERTIFICATE-----
        server_key: |
          -----BEGIN RSA PRIVATE KEY-----
          REPLACE_WITH_SILK_CONTROLLER_KEY
          -----END RSA PRIVATE KEY-----
      silk_daemon:
        ca_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_CA_CERT
          -----END CERTIFICATE-----
        client_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_SILK_DAEMON_CERT
          -----END CERTIFICATE-----
        client_key: |
          -----BEGIN RSA PRIVATE KEY-----
          REPLACE_WITH_SILK_DAEMON_KEY
          -----END RSA PRIVATE KEY-----
      vxlan_policy_agent:
        policy_server_url: https://policy-server.service.cf.internal:4003
        ca_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_CA_CERT
          -----END CERTIFICATE-----
        client_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_POLICY_AGENT_CERT
          -----END CERTIFICATE-----
        client_key: |
          -----BEGIN RSA PRIVATE KEY-----
          REPLACE_WITH_POLICY_AGENT_KEY
          -----END RSA PRIVATE KEY-----
      policy_server:
        uaa_client_secret: REPLACE_WITH_UAA_CLIENT_SECRET
        uaa_ca: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_UAA_CA_CERT
          -----END CERTIFICATE-----
        uaa_port: REPLACE_WITH_UAA_TLS_PORT
        database:
          type: REPLACE_WITH_DB_TYPE # must be mysql or postgres
          username: REPLACE_WITH_USERNAME
          password: REPLACE_WITH_PASSWORD
          host: REPLACE_WITH_DB_HOSTNAME
          port: REPLACE_WITH_DB_PORT # e.g. 3306 for mysql
          name: REPLACE_WITH_DB_NAME # e.g. network_policy
        ca_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_CA_CERT
          -----END CERTIFICATE-----
        server_cert: |
          -----BEGIN CERTIFICATE-----
          REPLACE_WITH_POLICY_SERVER_CERT
          -----END CERTIFICATE-----
        server_key: |
          -----BEGIN RSA PRIVATE KEY-----
          REPLACE_WITH_POLICY_SERVER_KEY
          -----END RSA PRIVATE KEY-----
  garden_properties:
    network_plugin: /var/vcap/packages/runc-cni/bin/garden-external-networker
    network_plugin_extra_args:
    - --configFile=/var/vcap/jobs/garden-cni/config/adapter.json
  jobs:
  - name: policy-server
    instances: 1
    persistent_disk: 256
    templates:
    - name: policy-server
      release: cf-networking
    - name: route_registrar
      release: cf
    - name: consul_agent
      release: cf
      consumes: {consul: nil}
    - name: metron_agent
      release: cf
    resource_pool: database_z1
    networks:
      - name: diego1
    properties:
      nats:
        machines: (( config_from_cf.nats.machines ))
        user: (( config_from_cf.nats.user ))
        password: (( config_from_cf.nats.password ))
        port: (( config_from_cf.nats.port ))
      metron_agent:
        zone: z1
      route_registrar:
        routes:
        - name: policy-server
          port: 4002
          registration_interval: 20s
          uris:
          - (( "api." config_from_cf.system_domain "/networking" ))
      consul:
        agent:
          services:
            policy-server:
              name: policy-server
config_from_cf: (( merge ))
