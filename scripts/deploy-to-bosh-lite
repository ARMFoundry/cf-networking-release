#!/bin/bash

# Simple script to download binary releases, update, create, and upload source
# releases, generate deployment manifests and deploy releases to bosh-lite.
#
# We assume you have already cloned the necessary releases into ~/workspace.

set -eu

error() {
    echo "[ERROR]: $1" 2>&1
    exit 1
}

create_bosh_env() {
bosh-cli create-env ~/workspace/bosh-deployment/bosh.yml \
  --state "~/workspace/container-networking-deployments/environments/local/state.json" \
  -o ~/workspace/bosh-deployment/virtualbox/cpi.yml \
  -o ~/workspace/bosh-deployment/virtualbox/outbound-network.yml \
  -o ~/workspace/bosh-deployment/bosh-lite.yml \
  -o ~/workspace/bosh-deployment/bosh-lite-runc.yml \
  -o ~/workspace/bosh-deployment/jumpbox-user.yml \
  --vars-store "~/workspace/container-networking-deployments/environments/local/creds.yml" \
  -v director_name="Bosh Lite Director" \
  -v internal_ip=192.168.50.6 \
  -v internal_gw=192.168.50.1 \
  -v internal_cidr=192.168.50.0/24 \
  -v outbound_network_name="NatNetwork"
}

set_bosh_env() {
  bosh-cli -e 192.168.50.6 --ca-cert <(bosh-cli int "~/workspace/container-networking-deployments/environments/local/creds.yml" --path /director_ssl/ca) alias-env vbox
  export BOSH_CLIENT="admin"
  export BOSH_CLIENT_SECRET="$(bosh-cli int "~/workspace/container-networking-deployments/environments/local/creds.yml" --path /admin_password)"
  export BOSH_ENVIRONMENT="vbox"
  export BOSH_DEPLOYMENT="cf"
  export BOSH_CA_CERT="$(bosh-cli int "~/workspace/container-networking-deployments/environments/local/creds.yml" --path /director_ssl/ca)"
}

upload_bosh_stemcell() {
  bosh-cli -e vbox upload-stemcell https://bosh.io/d/stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent
}

upload_cloud_config() {
  bosh-cli -e vbox -n update-cloud-config ~/workspace/cf-deployment/bosh-lite/cloud-config.yml
}

enable_br_netfilter() {
  touch ~/workspace/container-networking-deployments/environments/local/director_priv.key; chmod 600 ~/workspace/container-networking-deployments/environments/local/director_priv.key
  bosh-cli int "~/workspace/container-networking-deployments/environments/local/creds.yml" --path /jumpbox_ssh/private_key > "~/workspace/container-networking-deployments/environments/local/director_priv.key"
  ssh jumpbox@192.168.50.6 -i "~/workspace/container-networking-deployments/environments/local/director_priv.key" 'sudo modprobe br_netfilter && lsmod | grep br_netfilter'
}

deploy_cf() {
  bosh-cli deploy -n ~/workspace/cf-deployment/cf-deployment.yml \
  -o ~/workspace/cf-networking-release/manifest-generation/opsfiles/cf-networking.yml \
  -o ~/workspace/cf-deployment/operations/bosh-lite.yml \
  -o ~/workspace/cf-networking-release/manifest-generation/opsfiles/postgres.yml \
  --vars-store ~/workspace/cf-networking-deployments/environments/local/deployment-vars.yml \
  -v system_domain=bosh-lite.com
}

upload_local_release() {
    bosh-cli create-release --force
    bosh-cli upload-release
}

main() {
    create_bosh_env
    set_bosh_env

    enable_br_netfilter

    if [ $upload_stemcell == true ]; then
      upload_bosh_stemcell
    fi

    upload_cloud_config

    upload_local_release

    deploy_cf
}

upload_stemcell=true

main
