#!/bin/bash

set -e -u

export RUN_DIR=/var/vcap/sys/run/silk-controller
export LOG_DIR=/var/vcap/sys/log/silk-controller
export PIDFILE=$RUN_DIR/silk-controller.pid
export CONF_DIR=/var/vcap/jobs/silk-controller/config

mkdir -p /var/vcap/sys/log/monit
exec 1>> /var/vcap/sys/log/monit/silk-controller.out.log
exec 2>> /var/vcap/sys/log/monit/silk-controller.err.log

function wait_pid() {
  pid=$1
  shift
  max_checks=$1
  shift

  checks=$max_checks
  while [ -e "/proc/$pid" ]; do
    checks=$((checks - 1))
    if [ $checks -le 0 ]; then
      return 1
    fi
    sleep 0.1
  done

  return 0
}

function stop_process() {
  local pid
  pid=$(cat "$PIDFILE")

  echo "stopping..."
  kill -TERM "$pid"
  if wait_pid "$pid" 100 ; then
    rm "$PIDFILE"
    return 0
  fi

  echo "unable to stop process using SIGTERM after 10 seconds, will now attempt to SIGQUIT"
  kill -QUIT "$pid" || true
  if wait_pid "$pid" 50 ; then
    rm "$PIDFILE"
    return 0
  fi

  echo "unable to stop process using SIGQUIT after 5 seconds, will now attempt to SIGKILL"
  kill -KILL "$pid" || true
  if wait_pid "$pid" 50 ; then
    rm "$PIDFILE"
    return 0
  fi

  echo "unable to stop process using SIGKILL after 5 seconds"
  return 1
}

case $1 in

  start)

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    chown -R vcap:vcap $CONF_DIR

    exec chpst -u vcap:vcap bash -c '/var/vcap/jobs/silk-controller/bin/silk-controller_as_vcap'

    ;;

  stop)

    stop_process

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
